name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main

jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x

    - name: Prepare version number
      run: |
        $majorVersion='0'
        $minorVersion='0'
        $patchVersion=${{ github.run_number }}
        $fullVersion="$majorVersion.$minorVersion.$patchVersion"
        echo "VERSION=$fullVersion" >> $GITHUB_ENV
        echo $fullVersion

    - name: Increment version
      run: |
        $csprojPath = "./src/Dalog.DataPlatform.Client.ImageUploader/Dalog.DataPlatform.Client.ImageUploader/Dalog.DataPlatform.Client.ImageUploader.csproj"
        $issPath = "./setup.iss"
    
        # Update .csproj file
        $csproj = [xml](Get-Content $csprojPath)
        $manager = New-Object System.Xml.XmlNamespaceManager($csproj.NameTable)
        $manager.AddNamespace("ns", "http://schemas.microsoft.com/developer/msbuild/2003")
        $versionNode = $csproj.SelectSingleNode("//PropertyGroup/Version", $manager)
        if ($versionNode -eq $null) {
            Write-Error "Version node not found in .csproj file"
            exit 1
        }
        $versionNode.InnerText = $env:VERSION
        $csproj.Save($csprojPath)
    
        # Update .iss file
        $issContent = Get-Content $issPath
        $content = $content -replace "x.x.x", $env:VERSION
        Set-Content $issPath $issContent
  

    - name: Build with dotnet
      run: dotnet publish "./src/Dalog.DataPlatform.Client.ImageUploader/Dalog.DataPlatform.Client.ImageUploader/Dalog.DataPlatform.Client.ImageUploader.csproj" -c Release -r win-x64 --self-contained -o "./output"

    - name: Run Inno Setup
      run: |
        iscc.exe ./setup.iss

    - name: Create Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: $env:VERSION
        release_name: Release $env:VERSION
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Output/Dalog.DataPlatform.Client.ImageUploader_Setup.exe
        asset_name: Setup.exe
        asset_content_type: application/octet-stream
